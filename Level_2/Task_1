import java.util.Scanner;

public class TicTacToe {
    private static char[][] board;
    private static final int SIZE = 3;
    private static char currentPlayer;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        boolean playAgain;

        do {
            initializeBoard();
            currentPlayer = 'X';
            boolean gameWon = false;
            int movesCount = 0;

            System.out.println("Welcome to Tic-Tac-Toe!");
            displayBoard();

            while (!gameWon && movesCount < SIZE * SIZE) {
                System.out.println("Player " + currentPlayer + "'s turn.");
                int row, col;

                while (true) {
                    System.out.print("Enter row (1-3) and column (1-3): ");
                    row = scanner.nextInt() - 1;
                    col = scanner.nextInt() - 1;

                    if (row >= 0 && row < SIZE && col >= 0 && col < SIZE && board[row][col] == ' ') {
                        break;
                    } else {
                        System.out.println("Invalid move. Try again.");
                    }
                }

                board[row][col] = currentPlayer;
                movesCount++;
                displayBoard();

                if (checkWin(row, col)) {
                    gameWon = true;
                    System.out.println("Player " + currentPlayer + " wins!");
                } else if (movesCount == SIZE * SIZE) {
                    System.out.println("It's a draw!");
                } else {
                    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
                }
            }

            System.out.print("Do you want to play again? (yes/no): ");
            playAgain = scanner.next().equalsIgnoreCase("yes");

        } while (playAgain);

        System.out.println("Thanks for playing!");
        scanner.close();
    }

    private static void initializeBoard() {
        board = new char[SIZE][SIZE];
        for (int i = 0; i < SIZE; i++) {
            for (int j = 0; j < SIZE; j++) {
                board[i][j] = ' ';
            }
        }
    }

    private static void displayBoard() {
        System.out.println("  1   2   3");
        for (int i = 0; i < SIZE; i++) {
            System.out.print((i + 1) + " ");
            for (int j = 0; j < SIZE; j++) {
                System.out.print(board[i][j]);
                if (j < SIZE - 1) {
                    System.out.print(" | ");
                }
            }
            System.out.println();
            if (i < SIZE - 1) {
                System.out.println(" ---+---+---");
            }
        }
    }

    private static boolean checkWin(int row, int col) {
        // Check the row
        if (board[row][0] == currentPlayer && board[row][1] == currentPlayer && board[row][2] == currentPlayer) {
            return true;
        }

        // Check the column
        if (board[0][col] == currentPlayer && board[1][col] == currentPlayer && board[2][col] == currentPlayer) {
            return true;
        }

        // Check the main diagonal
        if (row == col && board[0][0] == currentPlayer && board[1][1] == currentPlayer && board[2][2] == currentPlayer) {
            return true;
        }

        // Check the anti-diagonal
        if (row + col == SIZE - 1 && board[0][2] == currentPlayer && board[1][1] == currentPlayer && board[2][0] == currentPlayer) {
            return true;
        }

        return false;
    }
}
